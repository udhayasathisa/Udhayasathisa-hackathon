  Project Goal:
Detect and identify prominent colors in an image using OpenCV.

  Requirements
1. Prerequisites
Python 3.x installed

Basic knowledge of Python

An image file for testing (e.g., .jpg, .png)

2. Install Required Libraries
Run the following command to install the required libraries:

pip install opencv-python numpy
      Project Structure
color-detection/
│
├── color_detection.py       # Main Python script
├── colors.csv               # CSV file with color names and RGB values
└── test_image.jpg           # Sample image file
📄 1. colors.csv Format
You can create or download a colors.csv file containing color names and RGB values.

Example format (no header):

color_name,hex,R,G,B
Red,#FF0000,255,0,0
Green,#00FF00,0,255,0
Blue,#0000FF,0,0,255
...
🧠 2. Main Script (color_detection.py)
Here is a simple script to detect the color when you click on a part of the image:

import cv2
import pandas as pd

# Load image and CSV file
img_path = 'test_image.jpg'
csv_path = 'colors.csv'
img = cv2.imread(img_path)
img = cv2.resize(img, (800, 600))
clicked = False
r = g = b = xpos = ypos = 0

# Load colors
index = ["color_name", "hex", "R", "G", "B"]
csv = pd.read_csv(csv_path, names=index, header=None)

# Get color name from RGB
def getColorName(R, G, B):
    min_diff = float('inf')
    cname = ""
    for i in range(len(csv)):
        d = abs(R - int(csv.loc[i, "R"])) + abs(G - int(csv.loc[i, "G"])) + abs(B - int(csv.loc[i, "B"]))
        if d <= min_diff:
            min_diff = d
            cname = csv.loc[i, "color_name"]
    return cname

# Mouse click event
def draw_function(event, x, y, flags, param):
    global b, g, r, xpos, ypos, clicked
    if event == cv2.EVENT_LBUTTONDOWN:
        clicked = True
        xpos = x
        ypos = y
        b, g, r = img[y, x]
        b, g, r = int(b), int(g), int(r)

cv2.namedWindow('Image')
cv2.setMouseCallback('Image', draw_function)

while True:
    cv2.imshow("Image", img)
    if clicked:
        # Display color name and RGB values
        cv2.rectangle(img, (20, 20), (600, 60), (b, g, r), -1)
        text = getColorName(r, g, b) + f' R={r} G={g} B={b}'
        cv2.putText(img, text, (30, 50), 2, 0.8, (255, 255, 255), 2)
        clicked = False
    if cv2.waitKey(20) & 0xFF == 27:  # Exit on 'Esc'
        break

cv2.destroyAllWindows()
▶️ How to Run the Project
Save your image as test_image.jpg in the project folder.

Make sure colors.csv is in the same folder.

Run the script:

python color_detection.py
Click on any point in the image to see the color name and RGB value.

Press Esc to close the window.

✅ Done!
You now have a basic working color detection tool using OpenCV.

Let me know if you want to:

Detect the most dominant colors using clustering

Build a GUI version

Export the results to a file
